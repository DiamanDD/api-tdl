generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model tasks {
  id           String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  todolist_id  String    @db.Uuid
  title        String    @db.VarChar(255)
  description  String?
  due_date     DateTime? @db.Timestamp(6)
  is_completed Boolean?  @default(false)
  created_at   DateTime? @default(now()) @db.Timestamp(6)
  todolists    todolists @relation(fields: [todolist_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
}

model todolists {
  id          String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  user_id     String    @db.Uuid
  title       String    @db.VarChar(255)
  description String?
  created_at  DateTime? @default(now()) @db.Timestamp(6)
  tasks       tasks[]
  users       users     @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
}

model users {
  id         String      @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  first_name String
  last_name  String
  username   String      @unique
  email      String      @unique
  password   String
  created_at DateTime?   @default(now()) @db.Timestamp(6)
  todolists  todolists[]
  roles      user_role[] @default([user])
}

enum user_role {
  user
  admin
  superadmin
}
